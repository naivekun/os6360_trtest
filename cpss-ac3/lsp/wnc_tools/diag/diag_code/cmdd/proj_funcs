#!/bin/bash

cmd_dir=$(dirname $0)
source $cmd_dir/sh_funcs/sdkutils_bcm
source $cmd_dir/sh_funcs/sdkutils_mrvl

#
# [PURPOSE]
#   Get current temperatures of device for cmdd. It will be used in failure display function.
# [PARAMETERS]
#   None
# [NOTES]
#   This function is for project.
#
function Get_Temperature() {
    #Read MAC temperature
    local sku=`cat /usr/local/sku`
        local sys_temp_path="/sys/bus/i2c/devices/6-0048/hwmon/hwmon0/temp1_input"
        local sys_temp=`cat $sys_temp_path | awk '{printf("%.2f",$1/1000)}'`
        local mac_temp1=`echo "do cpss-api call cpssDxChDiagDeviceTemperatureGet devNum 0" | nc 127.0.0.1 54321 | grep temperature | cut -d '=' -f2 | sed 's/\r//g'`
        local mac_temp2=`echo "do cpss-api call cpssDxChDiagDeviceTemperatureGet devNum 1" | nc 127.0.0.1 54321 | grep temperature | cut -d '=' -f2 | sed 's/\r//g'`

	case ${sku} in
	    OS6360-P48X)
            echo "sys:$sys_temp mac1:$mac_temp1 mac2:$mac_temp2 degC"
	    ;;
	    *) #Others have only one mac
            echo "sys $sys_temp mac $mac_temp1 degC"
            ;;
	esac
}

#
# [PURPOSE]
#   Get current vender of device for cmdd. It will be used in failure display function.
# [PARAMETERS]
#   None
# [NOTES]
#   This function is for project.
#
function Get_Vendor() {
    local vendor="unknown_vendor"
    if [ -f /var/opt/switch_vendor ]; then
        vendor="`cat /var/opt/switch_vendor`"
    fi
    echo "$vendor"
}

#
# [PURPOSE]
#   Get sdk version of device for cmdd. It will be used in failure display function.
# [PARAMETERS]
#   None
# [NOTES]
#   This function is for project.
#
function Get_SDK() {
    local sdk
    if [ -f /var/opt/switch_vendor ]; then
        vendor="`cat /var/opt/switch_vendor`"
        if [ "$vendor" == "BRCM" ]; then
            wait_sdk
            sdk="`bcmsh -c 'version' | grep '^Release:' | awk -F ' ' '{print $2}' | awk -F '-' '{print $2}'`"
        elif [ "$vendor" == "MARVELL" ]; then
            wait_cpss
            sdk="`echo 'show version' | nc 127.0.0.1 54321 | grep '^CPSS version:' | awk -F ' ' '{print $3}'`"
        fi
    fi     

    if [ -z "$sdk" ];
    then
        sdk="unknown_sdk"
    fi       
 
    echo "$sdk"
}

#
# [PURPOSE]
#   Get serial number of device for cmdd. It will be used in failure display function.
# [PARAMETERS]
#   None
# [NOTES]
#   This function is for project.
#
function Get_Serial() {
	local serial=`bash /usr/bin/eeprom_parser -r |grep "Serial" |awk -F ':' '{print $2}' | awk -F' ' '{print $1}'`
	if [[ -z "$serial" ]]; then
		serial="serialnone"
	fi
	echo "$serial"
}

#
# [PURPOSE]
#   Get mac of device for cmdd. It will be used in failure display function.
# [PARAMETERS]
#   None
# [NOTES]
#   This function is for project.
#
function Get_Mac() {
	local mac=`bash /usr/bin/eeprom_parser -r |grep "Base MAC Range 1" |awk -F 'Range 1:' '{print $2}' | awk -F' ' '{print $1}'`
	if [[ -z "$mac" ]]; then
		mac="macnone"
	fi
	echo "$mac"
}

#
# [PURPOSE]
#   Get current vender of device for cmdd. It will be used in failure display function.
# [PARAMETERS]
#   None
# [NOTES]
#   This function is for project.
#
function Get_DiagVer() {
    local diagVer=`cat /usr/local/diagver`
    echo "$diagVer"
}
