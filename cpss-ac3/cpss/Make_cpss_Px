# Makefile to build CPSS Px
#-------------------------------------------------------
# make -f Make_cpss_Px link  -s -j 24
# make -f Make_cpss_Px clean

include $(USER_BASE)/tools/build/flag/Make_cpss_def

GT_PEX=EXISTS
GT_PCI=EXISTS
GT_SMI=EXISTS

MORE_FLAGS += \
 GT_PEX\
 GT_PCI\
 GT_SMI

DEL_FLAGS := \
CH3_FAMILY\
CHX_FAMILY\
CONFIG_DDR3\
IMPL_BRIDGE\
IMPL_I2C\
IMPL_IP	\
IMPL_MIRROR\
IMPL_NETIF\
IMPL_PCL\
IMPL_PHY\
IMPL_POLICER\
IMPL_PORT\
IMPL_TCAM\
IMPL_TRUNK\
IMPL_TUNNEL\
IMPL_TM

DEL_SYM_FLAGS:=\
ASIC_SIMULATION_NO_HW\
CH3_FAMILY\
CHX_FAMILY\
CMD_LUA_CLI\
CMD_LUA_GENWRAPPER\
CMD_LUA_GLOBAL\
CMD_LUA_NET\
CPSS_API_LOCK_PROTECTION\
DRAGONITE_TYPE_A1\
GT_PCI\
GT_SMI\
IMAGE_HELP_SHELL\
IMPL_PP\
IMPL_TGF\
INCL_EXDXMX_DRIVER\
INCLUDE_TGF\
INCLUDE_UTF\
RAM_DATA_SUBDIR=dxCh\
RAM_DATA=mainLuaWrapper/data\
XML_RAM_DATA_SUBDIR=dxCh_xml




PROJ_NAME := common
include $(ADD_MODULE_MK)
PROJ_NAME := cpssEnabler
include $(ADD_MODULE_MK)
PROJ_NAME := mainPxDrv
include $(ADD_MODULE_MK)
PROJ_NAME := mainExtUtils
include $(ADD_MODULE_MK)
ifeq (EXISTS, $(ASIC_SIMULATION))
    PROJ_NAME := simulation
    include $(ADD_MODULE_MK)
endif
ifeq (YES, $(INCLUDE_TM))
    PROJ_NAME := mainTmDrv
    include $(ADD_MODULE_MK)
endif
ifeq (YES, $(INCLUDE_UTF))
    PROJ_NAME := mainUT
    include $(ADD_MODULE_MK)
endif
ifeq (yes,$(CMD_LUA_CLI))
    PROJ_NAME := mainLuaWrapper
    include $(ADD_MODULE_MK)
endif
ifneq (EXCLUDE_LIB,$(EXCLUDE_GALTIS))
    PROJ_NAME := mainGaltisWrapper
    include $(ADD_MODULE_MK)
endif

#TODO: Add option for referenceHal
    ifneq (, $(wildcard $(USER_BASE)/referenceHal/_Makefile))
        PROJ_NAME := referenceHal
        include $(ADD_MODULE_MK)
    endif

ifneq (, $(wildcard $(USER_BASE)/embeddedCommands/_Makefile))
    PROJ_NAME := embeddedCommands
    include $(ADD_MODULE_MK)
endif

#-----------------------------------------------------------------
DEP :=
OBJ := $(patsubst %.c,$(OUT_DIR)/%.$(_OBJ),$(SRC))
ifneq (DEP_NO, $(DEPENDENCY))
	DEP += $(patsubst %.$(_OBJ),%.$(_DEP),$(OBJ))
	-include $(DEP)
endif


simulation_CFLAGS_CL        := $(filter-out $(addprefix $(FD),$(DEL_SYM_FLAGS)),$(simulation_CFLAGS_CL))

###############################################################################

ifeq (1,$(SHARED_MEMORY))
    include $(USER_BASE)/tools/build/flag/Make_cpss_shared_libs
endif



pre_build: pre_build_objdir
ifeq (linux,$(OS_RUN))
ifeq (1,$(SHARED_MEMORY))
	@ test -d $(dir $(CPSSENABLER_LIB)) || mkdir -p $(dir $(CPSSENABLER_LIB))
endif
	@ $(foreach drv,$(sort $(DRIVER_LIST)), \
		$(shell \
			test -d $(OUT_DIR)/_drivers/$(drv) || mkdir -p $(OUT_DIR)/_drivers/$(drv); \
			cp -rp $(DRIVER_DIR_$(drv))/. $(OUT_DIR)/_drivers/$(drv) ) )
endif
ifeq (win32,$(OS_RUN))
	@ $(shell [ -d $(APP_WORK_VC) ] || $(MKDIR_P) $(APP_WORK_VC))
#	@ echo pre_build Done
endif

###############################################################################
MODULES_MAKE_LIB = COMMON MAINPXDRV CPSSENABLER MAINEXTUTILS MAINGALTISWRAPPER MAINLUAWRAPPER \
                   MAINTMDRV REFERENCEHAL EMBEDDEDCOMMANDS MAINUT SIMULATION
ifeq (1,$(SHARED_MEMORY))
    MODULES_MAKE_LIB += MAINLUAWRAPPER
endif
_ALL_LIBS += $(foreach dir, $(filter $(MODULES_MAKE_LIB),$(CPSS_SUBDIRS_LIST_CAP)), $($(dir)_LIB))

link: pre_build $(_ALL_LIBS) $(LIBS_SHARED)

#----------------------------------------------------------------------------

cmpl: pre_build $(OBJ)
#	@ echo compile Done
