###########################################
##                                       ##
##    Top Make file for CPSS drivers     ##
##                                       ##
###########################################

ifeq (YES, $(INCLUDE_UTF))
## all those files should not be compiled if we not need it

PROJ_NAME = mainUT

include $(USER_BASE)/gtDefsTopMake.mk 


PROJECT_PATH =  $(BASE_PATH)       \
                $(COMMON_PATH)     \
                $(OS_INCLUDE)      \
                $(OS_PATH)         \
                $(SYSCONFIG_PATH)  \
                $(PP_DRV_PATH)     \
		$(TM_API_PATH)     \
                $(TM_API_PATH_PRV) \
                $(EXT_DRV_PATH)    \
                $(EXT_UTILS_PATH)  \
                $(XBAR_DRV_PATH)   \
                $(FA_DRV_PATH)     \
                $(UTFTOOL_PATH)    \
		$(UTF_PP_DRV_PATH) \
                $(UTFTRAFFIC_PATH) \
                $(EXT_C001_PATH)   \
                $(EXT_C002_PATH)


##############
## CPSS PP  ##
##############
ifeq (EXISTS, $(EX_FAMILY))
AD_CFLAGS += $(FD)EX_FAMILY
INCLUDE_ENHANCED_UTF = NO
endif

ifeq (EXISTS, $(MX_FAMILY))
AD_CFLAGS += $(FD)MX_FAMILY
endif

# check if need to use 'GM_USED'.
#needed when 'force' image to use GM.
#also needed for Puma2,3 where use always GM. (for simulation)
ifeq (EXISTS, $(FORCE_GM_USE))
  AD_CFLAGS += $(FD)GM_USED
else
  ifeq (EXISTS, $(PM_FAMILY))
    ifeq (EXISTS, $(ASIC_SIMULATION))
      AD_CFLAGS += $(FD)GM_USED
    endif
  endif
endif

ifeq (EXISTS, $(CHX_FAMILY))
  ifeq (EXISTS, $(EX_FAMILY))
    #compilation of EXDX not support the TGF (enahnced UT)
    INCLUDE_ENHANCED_UTF = NO
  endif  
endif



ifeq (YES, $(INCLUDE_ENHANCED_UTF))
  AD_CFLAGS += $(FD)IMPL_TGF
endif


#################
## DEBUG FLAGS ##
#################
ifdef PRESTERA_DEBUG
CDEBUG = $(FD)PRESTERA_DEBUG
endif

ifeq (DEBUG_ON, $(CPSS_DEBUG))
ifeq (DEBUG_ON, $(CPSS_DEBUG_VLAN))
CDEBUG += $(FD)GT_VLAN_DEBUG
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_FDB))
CDEBUG += $(FD)GT_MAC_DEBUG
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_TRUNK))
CDEBUG += $(FD)GT_TRUNK_DEBUG
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_FDB_DUMP))
CDEBUG += $(FD)GT_MAC_DEBUG_DUMP
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_IPV4))
CDEBUG += $(FD)GT_DEBUG_IPV4
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_IPV6))
CDEBUG += $(FD)GT_DEBUG_IPV6
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_PCL))
CDEBUG += -DGT_DEBUG_PCL
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_TCM))
CDEBUG += $(FD)GT_DEBUG_TCM
endif
endif


##################
## GALTIS FLAGS ##
##################
ifneq (EXCLUDE_LIB, $(EXCLUDE_GALTIS))
  AD_CFLAGS += $(FD)IMPL_GALTIS
endif

############
## CFLAGS ##
############
CFLAGS += $(CFLAGS1) $(CFLAGS2) $(CFLAGS_OPT) $(OS_DEFINE) $(CPU_FLAGS) $(LFLAGS) $(AD_CFLAGS) $(CDEBUG)
ifeq (visual, $(TOOL))
CFLAGS += /W4
endif
        
include $(USER_BASE)/gtTargetsTopMake.mk 


ifeq (visual,$(TOOL))
#for visual use 'lib_full' instead of 'lib' , no need for both 'elf' and 'oneLib' , because same end result --> use elf !
full: lib_in_one_step
else
full: onelib
endif


## else for not INCLUDE_UTF
else

## STUB 'targets' for the gmake 
full: 
build_dir:
dep:
compile:
lib:
elf:
onelib:


endif
## endif of INCLUDE_UTF

