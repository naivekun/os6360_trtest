/*******************************************************************************
*              (c), Copyright 2001, Marvell International Ltd.                 *
* THIS CODE CONTAINS CONFIDENTIAL INFORMATION OF MARVELL SEMICONDUCTOR, INC.   *
* NO RIGHTS ARE GRANTED HEREIN UNDER ANY PATENT, MASK WORK RIGHT OR COPYRIGHT  *
* OF MARVELL OR ANY THIRD PARTY. MARVELL RESERVES THE RIGHT AT ITS SOLE        *
* DISCRETION TO REQUEST THAT THIS CODE BE IMMEDIATELY RETURNED TO MARVELL.     *
* THIS CODE IS PROVIDED "AS IS". MARVELL MAKES NO WARRANTIES, EXPRESSED,       *
* IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY, COMPLETENESS OR PERFORMANCE.   *
********************************************************************************
*/
/**
********************************************************************************
* @file prvUtfDeviceMatrixData.h
*
* @brief Internal header with Device Matrix data.
* This file is automatically generated from the various Device Matrix
* files.
*
* @version   26
********************************************************************************
*/
#ifndef __prvUtfDeviceMatrixDatah
#define __prvUtfDeviceMatrixDatah

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* macro to convert : CPSS_98CX8420_CNS (0xD40F11AB)  to be : 0xD40F */
#define DEVICE_ID_FROM_DEVICE_TYPE_MAC(devType) (0xFFFF & (devType >> 16))

/* indication that number of arps is 4*tunnelStart  */
#define ARP_FROM_TS_INDICATION_CNS  0xFFFFFFFF
/* indication that number of vidx is 4K */
#define VIDX_NUM_4K_INDICATION_CNS  0xFFFFFFFF
/* indication that 'tunnelTermination' need to use value from 'ingressAcls'
   because the single TCAM is shared */
#define SINGLE_TCAM_INDICATION_CNS  0xFFFFFFFF
/* indication that 'egressPolicer' need to use value from 'ingressPolicer'
   because the IPLR and EPLR are shared */
#define SHARED_ING_EGR_POLICER_INDICATION_CNS  0xFFFFFFFF

#define PIPE_INDICATION 0x80000000
/* indication that value = ('epr pipe') multipled by (num of pipes) */
#define PIPE_MULTIPLE_INDICATION(value) (value | (PIPE_INDICATION))

static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForXcat[] =
{
    /* deviceId,       bufferMemory, transmitDescr, fdb,            txQueues,       mcGroups,       trunks,         mstp,           ingressAcls,    ingressPolicer, egressPolicer, arp,          tunnelStart,  tunnelTermination, lpm,          routerNextHop, ipMll,          cnc,          vlanTranslationSupport, tr101Support, networkPorts, networkPortsType,   stackPorts */
    {  0xDF51,         0x400000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     8,            PRV_CPSS_PORT_FE_E, 2              },
    {  0xDFF5,         0x400000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDF71,         0x400000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDF73,         0x400000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDFD1,         0x800000,     0x1000,        0x4000,         8,              0x400,          127,            256,            0x400,          284,            128,           0x400,        NA_TABLE_CNS, 0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_FE_E, 3              },
    {  0xDFF1,         0x800000,     0x1000,        0x4000,         8,              0x400,          127,            256,            0x400,          284,            128,           0x400,        NA_TABLE_CNS, 0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_FE_E, 3              },
    {  0xDFF3,         0x800000,     0x1000,        0x4000,         8,              0x400,          127,            256,            0x400,          284,            128,           0x400,        NA_TABLE_CNS, 0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_FE_E, 3              },
    {  0xDCB1,         0x800000,     0x1000,        0x2000,         8,              0x400,          127,            256,            0x800,          512,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, 0x400,         NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDCB3,         0x800000,     0x1000,        0x2000,         8,              0x400,          127,            256,            0x800,          512,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, 0x400,         NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDCF1,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x800,        0x400,        0xD00,             NA_TABLE_CNS, 0x800,         NA_TABLE_CNS,   0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDD77,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x800,        0x400,        0xD00,             NA_TABLE_CNS, 0x800,         NA_TABLE_CNS,   0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDD91,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_FE_E, 4              },
    {  0xDDB1,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDDB3,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_FE_E, 4              },
    {  0xDE20,         0x400000,     0x800,         0x2000,         4,              NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     16,           PRV_CPSS_PORT_GE_E, 0              },
    {  0xDE30,         0x400000,     0x800,         0x2000,         4,              NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 0              },
    {  0xDF50,         0x800000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     8,            PRV_CPSS_PORT_GE_E, 2              },
    {  0xDFE4,         0x800000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     16,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDFF4,         0x800000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDF74,         0x800000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDF76,         0x800000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDF70,         0x800000,     0x1000,        0x4000,         4,              0x400,          32,             64,             512,            256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, 0xD00,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDF7C,         0x800000,     0x1000,        0x4000,         4,              0x400,          32,             64,             1024,           512,            128,           0x800,        0x400,        0xD00,             0x3400,       512,           NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDCF0,         0x800000,     0x1000,        0x2000,         8,              0x400,          127,            256,            0x800,          512,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, 0x400,         NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDCB4,         0x800000,     0x1000,        0x2000,         8,              0x400,          127,            256,            0x800,          512,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, 0x400,         NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDCB6,         0x800000,     0x1000,        0x2000,         8,              0x400,          127,            256,            0x800,          512,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, 0x400,         NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDC74,         0x800000,     0x1000,        0x2000,         8,              0x400,          127,            256,            0x800,          512,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, 0x400,         NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDC76,         0x800000,     0x1000,        0x2000,         8,              0x400,          127,            256,            0x800,          512,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, 0x400,         NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDC90,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x800,        0x400,        0xD00,             NA_TABLE_CNS, 0x800,         NA_TABLE_CNS,   0x1000,       GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
    {  0xDC34,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x800,        0x400,        0xD00,             NA_TABLE_CNS, 0x800,         NA_TABLE_CNS,   0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDCF2,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x800,        0x400,        0xD00,             NA_TABLE_CNS, 0x800,         NA_TABLE_CNS,   0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDE14,         0x800000,     0x1000,        0x4000,         8,              0x400,          127,            256,            0x400,          284,            128,           0x400,        NA_TABLE_CNS, 0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
    {  0xDE34,         0x800000,     0x1000,        0x4000,         8,              0x400,          127,            256,            0x400,          284,            128,           0x400,        NA_TABLE_CNS, 0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDE74,         0x800000,     0x1000,        0x4000,         8,              0x400,          127,            256,            0x400,          284,            128,           0x400,        NA_TABLE_CNS, 0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDEF4,         0x800000,     0x1000,        0x4000,         8,              0x400,          127,            256,            0x400,          284,            128,           0x400,        NA_TABLE_CNS, 0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDEF0,         0xC00000,     0x1800,        0x4000,         8,              0x400,          127,            256,            0x800,          284,            128,           0x800,        0x200,        0x400,             0x1000,       0x1000,        NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDC30,         0x800000,     0x1000,        0x4000,         8,              0x400,          127,            256,            0x800,          284,            128,           0x800,        0x200,        0x400,             0x1000,       0x1000,        NA_TABLE_CNS,   0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDD90,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
    {  0xDDB0,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDD74,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDDB6,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDDF4,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDDF6,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDD76,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDD94,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDDB4,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDD36,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDD54,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      12,           PRV_CPSS_PORT_GE_E, 2              },
    {  0xDDE0,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDD70,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDEB0,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDE24,         0xC00000,     0x1800,        0x4000,         8,              0x1000,         127,            256,            0xC00,          0x800,          512,           0x1000,       0x400,        0xD00,             0x3400,       0x1000,        0x1000,         0x1000,       GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDFB0,         0x400000,     0x800,         0x2000,         4,              0x400,          31,             32,             0x400,          64,             NA_TABLE_CNS,  256,          NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDFB4,         0x400000,     0x800,         0x2000,         4,              0x400,          31,             32,             0x400,          64,             NA_TABLE_CNS,  256,          NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDFB6,         0x400000,     0x800,         0x2000,         4,              0x400,          31,             32,             0x400,          64,             NA_TABLE_CNS,  256,          NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDFF0,         0x800000,     0x1000,        0x4000,         4,              0x400,          127,            32,             0x400,          128,            64,            256,          NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDF32,         0x800000,     0x1000,        0x4000,         4,              0x400,          127,            32,             0x400,          128,            64,            256,          NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              },
    {  0xDF34,         0x800000,     0x800,         0x2000,         4,              256,            32,             32,             512,            256,            NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, 4              }

};

static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForXcat3[] =
{
                        /* deviceId,    bufferMemory, transmitDescr,      fdb,           txQueues,       mcGroups,       trunks,         mstp,           ingressAcls,    ingressPolicer, egressPolicer, arp,          tunnelStart,  tunnelTermination, lpm,          routerNextHop, ipMll,          cnc,          vlanTranslationSupport, tr101Support, networkPorts, networkPortsType,   stackPorts */
/*CPSS_98DX3336_CNS*/    {  0xF400,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3335_CNS*/    {  0xF401,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3334_CNS*/    {  0xF402,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3333_CNS*/    {  0xF403,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3226_CNS*/    {  0xF404,         _12M,         _6K,           _16K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS,  256,              512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3225_CNS*/    {  0xF405,         _12M,         _6K,           _16K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS,  256,              512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3224_CNS*/    {  0xF406,         _12M,         _6K,           _16K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS,  256,              512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3223_CNS*/    {  0xF407,         _12M,         _6K,           _16K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS,  256,              512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX336S_CNS*/    {  0xF500,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX335S_CNS*/    {  0xF501,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX334S_CNS*/    {  0xF502,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX333S_CNS*/    {  0xF503,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX226S_CNS*/    {  0xF504,         _12M,         _6K,           _16K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS,  256,              512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX225S_CNS*/    {  0xF505,         _12M,         _6K,           _16K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS,  256,              512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX224S_CNS*/    {  0xF506,         _12M,         _6K,           _16K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS,  256,              512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX223S_CNS*/    {  0xF507,         _12M,         _6K,           _16K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS,  256,              512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },

/*CPSS_98DX3243_CNS*/    {  0xF40F,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _3K,            _1K,            128,           _2K,          512,           _1K,              _6K,          _2K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3244_CNS*/    {  0xF40E,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _3K,            _1K,            128,           _2K,          512,           _1K,              _6K,          _2K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3245_CNS*/    {  0xF40D,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _3K,            _1K,            128,           _2K,          512,           _1K,              _6K,          _2K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3246_CNS*/    {  0xF40C,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _3K,            _1K,            128,           _2K,          512,           _1K,              _6K,          _2K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3247_CNS*/    {  0xF40A,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _3K,            _1K,            128,           _2K,          512,           _1K,              _6K,          _2K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },


/*CPSS_98DX1333_CNS*/    {  0xF418,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 2              },
/*CPSS_98DX1335_CNS*/    {  0xF419,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX1336_CNS*/    {  0xF41A,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },

/*CPSS_98DX1233_CNS*/    {  0xF408,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 2              },
/*CPSS_98DX1235_CNS*/    {  0xF409,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },

/*CPSS_98DX123S_CNS*/    {  0xF508,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 2              },
/*CPSS_98DX125S_CNS*/    {  0xF509,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },

/*CPSS_98DX3233_CNS*/    {  0xF413,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3234_CNS*/    {  0xF412,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3235_CNS*/    {  0xF411,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX3236_CNS*/    {  0xF410,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX233S_CNS*/    {  0xF513,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX234S_CNS*/    {  0xF512,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX235S_CNS*/    {  0xF511,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DX236S_CNS*/    {  0xF510,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DXH333_CNS*/    {  0xF414,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DXT323_CNS*/    {  0xF415,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DXT321_CNS*/    {  0xF416,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 2              },

/*CPSS_98DXC323_CNS*/    {  0xF41B,         _12M,         _6K,           _16K,           8,              _2K,            127,            256,            _1K,            _1K,            128,           _1K,          NA_TABLE_CNS, 512,               _1K,          _1K,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },

/*CPSS_98DXH201_CNS*/    {  0xF41D,         _12M,         _6K,            _8K,           8,              _1K,            127,            256,            512,            512,            128,           _1K,          NA_TABLE_CNS, 256,               512,          512,           _1K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DXC336_CNS*/    {  0xF41C,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DXC334_CNS*/    {  0xF41E,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, 4              },
/*CPSS_98DXC333_CNS*/    {  0xF41F,         _12M,         _6K,           _16K,           8,              _4K,            127,            256,            _3K,            _2K,            512,           _4K,          _1K,          3328,              (13*_1K),     _4K,           _4K,            _4K,          GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, 4              },
};

static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForXcat2[] =
{
    /* deviceId,       bufferMemory, transmitDescr, fdb,          txQueues,     mcGroups,     trunks,       mstp,         ingressAcls,  ingressPolicer, egressPolicer, arp,          tunnelStart,  tunnelTermination, lpm,          routerNextHop, ipMll,        cnc,          vlanTranslationSupport, tr101Support, networkPorts, networkPortsType,   stackPorts */
    {  0xE662,         0x400000,     0x800,         0x2000,       4,            NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,   NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     16,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE672,         0x400000,     0x800,         0x2000,       4,            NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,   NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE460,         0x400000,     0x800,         0x2000,       4,            NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,   NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     16,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE470,         0x400000,     0x800,         0x2000,       4,            NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,   NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE75B,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     8,            PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE76B,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     16,           PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE77B,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE501,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     8,            PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE401,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE75A,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     8,            PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE7EE,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     16,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE7FE,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE776,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE420,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     8,            PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE410,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     16,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE400,         0x800000,     0x1000,        0x4000,       4,            0x400,        32,           64,           512,          256,            NA_TABLE_CNS,  0x400,        NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, NA_TABLE_CNS, GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE7DB,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE7EB,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE7FB,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE551,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE441,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_FE_E, NA_TABLE_CNS },
    {  0xE61E,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE62E,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      16,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE63E,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE6BE,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE450,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      8,            PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE440,         0x800000,     0x1000,        0x4000,       8,            0x400,        127,          256,          0x400,        284,            128,           0x400,        256,          0x400,             NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_TRUE,                GT_TRUE,      24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    {  0xE7B2,         0x800000,     0x1000,        0x4000,       4,            0x400,        127,          32,           0x400,        128,            64,            256,          NA_TABLE_CNS, NA_TABLE_CNS,      NA_TABLE_CNS, NA_TABLE_CNS,  NA_TABLE_CNS, 0x800,        GT_FALSE,               GT_FALSE,     24,           PRV_CPSS_PORT_GE_E, NA_TABLE_CNS },
    /*  <Device number: DX1083>, <DEV_ID: 0xE58B>, no features column selected */
    /*  <Device number: DX1085>, <DEV_ID: 0xE5AB>, no features column selected */
    /*  <Device number: DX3083>, <DEV_ID: 0xE5BA>, no features column selected */
    /*  <Device number: DX3085>, <DEV_ID: 0xE5CA>, no features column selected */

};

static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForLion[] =
{
    /* deviceId,       bufferMemory, transmitDescr, fdb,            txQueues,       mcGroups,       trunks,         mstp,           ingressAcls,    ingressPolicer, egressPolicer, arp,            tunnelStart,    tunnelTermination, lpm,            routerNextHop, ipMll,          cnc,            vlanTranslationSupport, tr101Support, networkPorts, networkPortsType,               stackPorts */
    {  0xE0C1,         0x400000,     0x800,         0x4000,         8,              0x1000,         127,            256,            0xC00,          0x1000,         NA_TABLE_CNS,  NA_TABLE_CNS,   NA_TABLE_CNS,   NA_TABLE_CNS,      NA_TABLE_CNS,   NA_TABLE_CNS,  NA_TABLE_CNS,   0x1000,         GT_TRUE,                GT_FALSE,     NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE011,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x1000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE01F,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x1000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE012,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x1000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE00D,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x1000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE01D,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x800,          0x200,         0x2000,         0x2000,         0x1000,            0x4000,         0x2000,        0x1000,         0x1000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE013,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE001,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE085,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE096,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE097,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE041,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE053,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE05F,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE02B,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xE023,         0x800000,     0x800,         0x8000,         8,              0x1000,         127,            256,            0xC00,          0x2000,         0x800,         0x2000,         0x2000,         0x4000,            0x4000,         0x2000,        0x1000,         0x4000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS }
};

static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForLion2[] =
{
    /* deviceId,       bufferMemory, transmitDescr, fdb,            txQueues,       mcGroups,       trunks,         mstp,           ingressAcls,    ingressPolicer, egressPolicer, arp,            tunnelStart,    tunnelTermination, lpm,            routerNextHop, ipMll,          cnc,            vlanTranslationSupport, tr101Support, networkPorts, networkPortsType,               stackPorts */
    {  0xEC05,         0x800000,     0x800,         0x10000,        8,              0x1000,         127,            256,            0x800,          0x4000,         0x1000,        0x2000,         0x4000,         0x4000,            0x2000,         0x2000,        0x1000,         0x8000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xEC02,         0x800000,     0x800,         0x10000,        8,              0x1000,         127,            256,            0x800,          0x4000,         0x1000,        0x2000,         0x4000,         0x4000,            0x2000,         0x2000,        0x1000,         0x8000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xEC08,         0x800000,     0x800,         0x10000,        8,              0x1000,         127,            256,            0x800,          0x4000,         0x1000,        0x2000,         0x4000,         0x4000,            0x2000,         0x2000,        0x1000,         0x8000,         GT_TRUE,                GT_TRUE,      NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS },
    {  0xEC0C,         0x800000,     0x800,         0x10000,        8,              0x1000,         127,            0,              0x800,          0x4000,         0x1000,        0,              0,              0,                 0,              0,             0,              0x8000,         GT_FALSE,               GT_FALSE,     NA_TABLE_CNS, PRV_CPSS_PORT_NOT_APPLICABLE_E, NA_TABLE_CNS }
};

/* next info was manually added for bobcat2 : CPSS_98DX4220_CNS - 0xFC03 */
static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1ForBobcat2_reduced =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x00FFFFFF,/*0..23 - 24 ports */
      0x0F000000,/*56..59 - 4 ports */
      0x000000FF}}/*64..71 - 8 ports*/
};

/* next info was manually added for bobcat2 : CPSS_98DX8216_CNS - 0xFC04 */
static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1ForBobcat2_control_plane_16 =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x00000000,
      0x0FF00000,/*52..59 - 8 ports */
      0x000000FF}}/*64..71 - 8 ports*/
};

/* next info was manually added for bobcat2 : CPSS_98DX8216_CNS - 0xFC05 */
static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1ForBobcat2_control_plane_24 =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x00000000,
      0xFFFF0000,/*48..63 - 16 ports */
      0x000000FF}}/*64..71 - 8 ports*/
};

/* next info was manually added for bobcat2 : CPSS_98DX8219_CNS - 0xFC08 */
static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1ForBobcat2_control_plane_32 =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x000000FF, /*0..8 - 8 ports */
      0xFFFF0000,/*48..63 - 16 ports */
      0x000000FF}}/*64..71 - 8 ports*/
};

/* next info was manually added for bobcat2 : CPSS_98DX4221_CNS - 0xFC02 */
static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1ForBobcat2_stackable =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0xFFFFFFFF,/*0..31 - 32 ports */
      0x0F00FFFF,/*32..47 - 16 ports, 56..59 - 4 ports */
      0x000000FF}}/*64..71 - 8 ports*/
};

/* next info was manually added for bobcat2 : CPSS_98DX4222_CNS - 0xFC06 */
static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1ForBobcat2_stackable1 =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0xFFFFFFFF,/*0..31 - 32 ports */
      0xF000FFFF,/*32..47 - 16 ports, 60..63 - 4 ports */
      0x000000FF}}/*64..71 - 8 ports*/
};

/* next info was manually added for bobcat2 : CPSS_98DX4253_CNS - 0xFC07 */
static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1ForBobcat2_carrier_small =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x00000000,/*0..31 - not present  */
      0x0FF0FFFF,/*32..47 - 16 ports, 52..59 - 8 ports */
      0x00000000}}/*64..71 - not present */
};

/* next table was manually added for bobcat2 : CPSS_98DX4251_CNS - 0xFC00 , CPSS_98DX4221_CNS - 0xFC02 ,
   CPSS_98DX4220_CNS - 0xFC03 , CPSS_98DX8216_CNS - 0xFC04 , CPSS_98DX8224_CNS - 0xFC05,
   CPSS_98DX4222_CNS - 0xFC06, CPSS_98DX4253_CNS - 0xFC07, CPSS_98DX8219_CNS - 0xFC08, CPSS_98DX4223CNS - 0xFC09 */
static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForBobcat2[] =
{
    /* deviceId,       bufferMemory, transmitDescr, fdb,            txQueues,       mcGroups,                               trunks,         mstp,           ingressAcls,    ingressPolicer, egressPolicer, arp,                                 tunnelStart,    tunnelTermination, lpm,            routerNextHop, ipMll,          cnc,            vlanTranslationSupport, tr101Support, networkPorts, networkPortsType,               stackPorts  , data1InfoPtr*/
     {  0xFC00,         _32M,         _16K,         _128K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _4K,            (36*_1K)   ,          _8K,          _8K,      ARP_FROM_TS_INDICATION_CNS,           _32K,            (36*_1K)   ,     _128K,            _24K,        _16K,            _32K/*???*/,         GT_TRUE,            GT_TRUE,     48           , PRV_CPSS_PORT_GE_E             , 8       , NULL}
   , {  0xFC02,         _32M,         _16K,         _128K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _4K,            (36 * _1K),          _8K,          _8K,      ARP_FROM_TS_INDICATION_CNS,           _32K,            (36 * _1K),     _128K,            _24K,        _16K,            _32K,         GT_TRUE,            GT_TRUE,     48, PRV_CPSS_PORT_GE_E, 6, &prvUtfDeviceMatrixData1ForBobcat2_stackable }
   , {  0xFC03,         _32M,         _16K,         _128K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _4K,            (36 * _1K),          _8K,          _8K,      ARP_FROM_TS_INDICATION_CNS,           _32K,            (36 * _1K),     _128K,            _24K,        _16K,            _32K,         GT_TRUE,            GT_TRUE,     24, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1ForBobcat2_reduced }
   , {  0xFC04,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18 * _1K),          _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18 * _1K),   (48 * _1K),            _8K,         _8K,            _32K,         GT_TRUE,            GT_TRUE,     16, PRV_CPSS_PORT_GE_E, 0, &prvUtfDeviceMatrixData1ForBobcat2_control_plane_16 }
   , {  0xFC05,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18 * _1K),          _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18 * _1K),   (48 * _1K),            _8K,         _8K,            _32K,         GT_TRUE,            GT_TRUE,     24, PRV_CPSS_PORT_GE_E, 0, &prvUtfDeviceMatrixData1ForBobcat2_control_plane_24 }
   , {  0xFC06,         _32M,         _16K,         _128K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _4K,            (36 * _1K),          _8K,          _8K,      ARP_FROM_TS_INDICATION_CNS,           _32K,            (36 * _1K),     _128K,            _24K,        _16K,            _32K,         GT_TRUE,            GT_TRUE,     48, PRV_CPSS_PORT_GE_E, 6, &prvUtfDeviceMatrixData1ForBobcat2_stackable1 }
   , {  0xFC07,         _16M,          _8K,          _32K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18 * _1K),          _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18 * _1K),      _16K,             _8K,         _8K,            _32K,         GT_TRUE,            GT_TRUE,     16, PRV_CPSS_PORT_GE_E, 8, &prvUtfDeviceMatrixData1ForBobcat2_carrier_small }
   , {  0xFC08,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18 * _1K),          _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18 * _1K),   (48 * _1K),            _8K,         _8K,            _32K,         GT_TRUE,            GT_TRUE,     32, PRV_CPSS_PORT_GE_E, 0, &prvUtfDeviceMatrixData1ForBobcat2_control_plane_32 }
   , {  0xFC09,         _32M,         _16K,         _128K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _4K,            (36 * _1K),          _8K,          _8K,      ARP_FROM_TS_INDICATION_CNS,           _32K,            (36 * _1K),     _128K,            _24K,        _16K,            _32K,         GT_TRUE,            GT_TRUE,     48, PRV_CPSS_PORT_GE_E, 8, NULL }
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Caelum_48_12G =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0xFFFFFFFF, /*0..31  - 32 ports  */
      0x4F00FFFF, /*32..47 - 16 ports, 56..59 - 4 ports, 62 */
      0x000000FF}}/*64..71 - 8 ports */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Caelum_24_12G =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x00FFFFFF, /*0..23  - 24 ports  */
      0x4F000000, /*56..59 - 4 ports, 62 */
      0x000000FF}}/*64..71 - 8 ports */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Caelum_28_12G =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x0FFFFFFF, /*0..27  - 28 ports  */
      0x4F000000, /*56..59 - 4 ports, 62 */
      0x000000FF}}/*64..71 - 8 ports */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Cetus_12G =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x00000000, /*0..31 - not present  */
      0x4F000000, /*56..59 - 4 ports, 62 */
      0x000000FF}}/*64..71 - 8 ports */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Cetus_8G =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x00000000,/*0..31 - not present  */
      0x40000000,/*32..63 - not present */
      0x000000FF}}/*64..71 - 8 ports */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1AldrinZ0_12_12G =
{
    /*check_existingPorts*/
    GT_TRUE,
    /*existingPorts*/
    {{0x11111111, /*0, 4, 8, 12, 16, 20, 24, 28 - 8 ports  */
      0x4F001111, /*32, 36, 40, 44, 56..59 - 8 ports, 62 */
      0x000000FF}}/*64..71 - 8 ports */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin_8 =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0x000000FF, 0x00000001, 0x0}} /*existingPorts: 0..7, 32  */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin_12 =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0x00000FFF, 0x00000001, 0x0}} /*existingPorts: 0..11, 32  */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin_16 =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0x0000FFFF, 0x00000001, 0x0}} /*existingPorts: 0..15, 32  */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin_18 =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0x0003FFFF, 0x00000001, 0x0}} /*existingPorts: 0..17, 32  */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin_24 =
{
    GT_TRUE,                         /*check_existingPorts*/
    {{0x00FFFFFF, 0x00000001, 0x0}}  /*existingPorts: 0..24, 32  */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin_32 =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0xFFFFFFFF, 0x00000001, 0x0}} /*existingPorts: 0..31, 32  */
};


static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForCaelum[] =
{
    /* deviceId,       bufferMemory, transmitDescr, fdb,            txQueues,       mcGroups,                               trunks,         mstp,           ingressAcls,    ingressPolicer, egressPolicer, arp,                                 tunnelStart,    tunnelTermination, lpm,         routerNextHop, ipMll,          cnc,    vlanTranslationSupport, tr101Support, networkPorts, networkPortsType,               stackPorts  , data1InfoPtr*/
     {  0xBC00,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18*_1K),           _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18*_1K),   (48 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,     48, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Caelum_48_12G}
   , {  0xBC01,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18*_1K),           _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18*_1K),   (48 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,     24, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Caelum_24_12G }
   , {  0xBC10,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18*_1K),           _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18*_1K),   (48 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,     48, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Caelum_48_12G }
   , {  0xBC11,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18*_1K),           _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18*_1K),   (48 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,     24, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Caelum_24_12G }
   , {  0xBC12,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18*_1K),           _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18*_1K),   (48 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,     24, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Caelum_28_12G }
   , {  0xBC16,         _24M,         _12K,          _32K,           8,              VIDX_NUM_4K_INDICATION_CNS,            127      ,      256,            (12*_1K),           _2K,          _2K,      ARP_FROM_TS_INDICATION_CNS,            _4K,            (12*_1K),   (24 * _1K),            _4K,         _4K,             _8K,         GT_TRUE,            GT_TRUE,     24, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Caelum_24_12G }
   , {  0xBC18,         _24M,         _12K,          _32K,           8,              VIDX_NUM_4K_INDICATION_CNS,            127      ,      256,            (12*_1K),           _2K,          _2K,      ARP_FROM_TS_INDICATION_CNS,            _4K,            (12*_1K),   (24 * _1K),            _4K,         _4K,             _8K,         GT_TRUE,            GT_TRUE,     24, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Caelum_28_12G }
   , {  0xBC17,         _32M,         _16K,          _32K,           8,              VIDX_NUM_4K_INDICATION_CNS,            127      ,      256,            (12*_1K),           _4K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _4K,            (12*_1K),   (24 * _1K),            _4K,         _4K,             _8K,         GT_TRUE,            GT_TRUE,     48, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Caelum_48_12G }
   , {  0xBC1F,         _32M,         _16K,          _64K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            ( 9*_1K),           _2K,          _2K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            ( 9*_1K),   (48 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,     48, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1AldrinZ0_12_12G }
};

static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForCetus[] =
{
    /* deviceId,       bufferMemory, transmitDescr, fdb,            txQueues,       mcGroups,                               trunks,         mstp,           ingressAcls,    ingressPolicer, egressPolicer, arp,                                 tunnelStart,    tunnelTermination, lpm,         routerNextHop, ipMll,          cnc,    vlanTranslationSupport, tr101Support, networkPorts, networkPortsType,               stackPorts  , data1InfoPtr*/
     {  0xBE00,         _16M,          _8K,          _32K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18*_1K),           _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18*_1K),   (16 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,      0, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Cetus_12G }
   , {  0xBE11,         _16M,          _8K,          _32K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18*_1K),           _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18*_1K),   (16 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,      0, PRV_CPSS_PORT_GE_E,  8, &prvUtfDeviceMatrixData1Cetus_8G }
   , {  0xBE10,         _16M,          _8K,          _32K,           8,              VIDX_NUM_4K_INDICATION_CNS,            _4K-1    ,      _1K,            (18*_1K),           _6K,          _4K,      ARP_FROM_TS_INDICATION_CNS,            _8K,            (18*_1K),   (16 * _1K),            _8K,         _4K,            _32K,         GT_TRUE,            GT_TRUE,      0, PRV_CPSS_PORT_GE_E, 12, &prvUtfDeviceMatrixData1Cetus_12G }
};


/* Aldrin devices:
   C80E - CPSS_98DX8315_CNS,
   C819 - CPSS_98DX8308_CNS,
   C81C - CPSS_98DX8312_CNS,
   C81D - CPSS_98DX8316_CNS,
   C81E - CPSS_98DX8324_CNS,
   C81F - CPSS_98DX8332_CNS
   C815 - CPSS_98DXH831_CNS
   C816 - CPSS_98DXH832_CNS
   C817 - CPSS_98DXH833_CNS
   */
static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForAldrin[] =
{
    /*   deviceId,    bufferMemory,   transmitDescr,          fdb,                        txQueues,      mcGroups,                   trunks,      mstp,
         ingressAcls, ingressPolicer, egressPolicer,          arp,                        tunnelStart,   tunnelTermination,          lpm,        routerNextHop,
         ipMll,       cnc,            vlanTranslationSupport, tr101Support,               networkPorts,  networkPortsType,           stackPorts,  data1InfoPtr
    */
    {
        0xC801,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_32
    },
    {
        0xC800,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_32
    },
    {
        0xC80E,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_32
    },
    {
        0xC80F,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_32
    },
    {
        0xC819,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_8
    },
    {
        0xC81C,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_12
    },
    {
        0xC81D,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_16
    },
    {
        0xC81E,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K     ,    _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         24,           &prvUtfDeviceMatrixData1Aldrin_24
    },
    {
        0xC81F,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K     ,    _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _8K,           _9K,                        _16K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         32,           &prvUtfDeviceMatrixData1Aldrin_32
    },
    {
        0xC818,      _12M,           _6K,                    _8K,                        8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K     ,    _2K,            _1K/2,                  ARP_FROM_TS_INDICATION_CNS, _1K,           _9K,                        _8K,          _4K,
        _2K,         _4K,            GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         32,           &prvUtfDeviceMatrixData1Aldrin_32
    },
    {
        0xC815,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _4K,           _9K,                        _8K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_16
    },
    {
        0xC816,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K     ,    _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _4K,           _9K,                        _8K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         24,           &prvUtfDeviceMatrixData1Aldrin_24
    },
    {
        0xC817,      _24M,           _12K,                   _32K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K     ,    _2K,            _2K,                    ARP_FROM_TS_INDICATION_CNS, _4K,           _9K,                        _8K,         _8K,
        _4K,         _32K,           GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         32,           &prvUtfDeviceMatrixData1Aldrin_32
    },

};

/* AC3X devices:
    CPSS_98DX3255_CNS        0xC80411AB
    CPSS_98DX3256_CNS        0xC80511AB
    CPSS_98DX3257_CNS        0xC80611AB
    CPSS_98DX3258_CNS        0xC80711AB
    CPSS_98DX3259_CNS        0xC80811AB
*/
static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForAC3X[] =
{
    /*   deviceId,    bufferMemory,   transmitDescr,          fdb,                        txQueues,      mcGroups,                   trunks,      mstp,
         ingressAcls, ingressPolicer, egressPolicer,          arp,                        tunnelStart,   tunnelTermination,          lpm,        routerNextHop,
         ipMll,       cnc,            vlanTranslationSupport, tr101Support,               networkPorts,  networkPortsType,           stackPorts,  data1InfoPtr
    */
    {
        0xC804,      _12M,           _6K,                    _16K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _1K/2,                  ARP_FROM_TS_INDICATION_CNS, _1K,           _9K,                        _13K,         _4K,
        _2K,         _8K,            GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_32
    },
    {
        0xC805,      _12M,           _6K,                    _16K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K,         _2K,            _1K/2,                  ARP_FROM_TS_INDICATION_CNS, _1K,           _9K,                        _13K,         _4K,
        _2K,         _8K,            GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         16,           &prvUtfDeviceMatrixData1Aldrin_18
    },
    {
        0xC806,      _24M,           _12K,                   _16K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K     ,    _2K,            _1K/2,                  ARP_FROM_TS_INDICATION_CNS, _1K,           _9K,                        _13K,         _4K,
        _2K,         _8K,            GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         24,           &prvUtfDeviceMatrixData1Aldrin_24
    },
    {
        0xC807,      _24M,           _12K,                   _16K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K     ,    _2K,            _1K/2,                  ARP_FROM_TS_INDICATION_CNS, _1K,           _9K,                        _13K,         _4K,
        _2K,         _8K,            GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         32,           &prvUtfDeviceMatrixData1Aldrin_32
    },
    {
        0xC808,      _24M,           _12K,                   _16K,                       8,             VIDX_NUM_4K_INDICATION_CNS, _4K-1    ,   _1K,
        _9K     ,    _2K,            _1K/2,                  ARP_FROM_TS_INDICATION_CNS, _1K,           _9K,                        _13K,         _4K,
        _2K,         _8K,            GT_TRUE,                GT_TRUE,                    0,             PRV_CPSS_PORT_GE_E,         32,           &prvUtfDeviceMatrixData1Aldrin_32
    }
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Bobcat3_74ports =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0xFFFFFFFF, 0xFFFFFFFF, 0x3FF}} /*existingPorts: 0..73  */
};

/*
Bobcat3 devices:
    CPSS_98CX8420_CNS
    CPSS_98CX8410_CNS

Armstrong devices :
    CPSS_98EX5410_CNS
    CPSS_98EX5420_CNS
    CPSS_98EX5422_CNS
    CPSS_98EX5424_CNS
    CPSS_98EX5421_CNS
    CPSS_98EX5430_CNS
    CPSS_98EX5431_CNS
*/
static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForBobcat3[] =
{
     /* deviceId,              */
     {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98CX8410_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        96*_1M,         _48K,         _64K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _1K,    (18*_1K)     ,    PIPE_MULTIPLE_INDICATION(_8K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _16K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_32K, _12K,         _16K,    PIPE_MULTIPLE_INDICATION(_32K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}
     /* deviceId,              */
     ,{  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98CX8420_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        96*_1M,         _48K,         _256K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _4K,    (36*_1K)     ,    PIPE_MULTIPLE_INDICATION(_32K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _64K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_128K, _24K,         _32K,    PIPE_MULTIPLE_INDICATION(_64K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}
     ,
     /* deviceId,              */
     {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5410_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        80*_1M,         _48K,         _128K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _2K,    (18*_1K)     ,    PIPE_MULTIPLE_INDICATION(_16K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _16K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_64K, _8K,          _16K,    PIPE_MULTIPLE_INDICATION(_32K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}
     ,
     /* deviceId,              */
     {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5420_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        80*_1M,         40*_1K,         _128K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _2K,    (18*_1K)     ,    PIPE_MULTIPLE_INDICATION(_16K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _16K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_64K, _8K,          _16K,    PIPE_MULTIPLE_INDICATION(_32K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}
     ,
     /* deviceId,              */
     {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5421_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        80*_1M,         40*_1K,         _128K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,                           egressPolicer,                arp,                        tunnelStart, */
        _2K,    (18*_1K)     ,    PIPE_MULTIPLE_INDICATION(_16K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _16K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_64K, _8K,          _16K,    PIPE_MULTIPLE_INDICATION(_32K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}
     ,
     /* deviceId,              */
     {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5422_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        80*_1M,         40*_1K,         _128K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,                           egressPolicer,                arp,                        tunnelStart, */
        _2K,    (18*_1K)     ,    PIPE_MULTIPLE_INDICATION(_16K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _16K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_64K, _8K,          _16K,    PIPE_MULTIPLE_INDICATION(_32K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}
     ,
     /* deviceId,              */
     {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5424_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        96*_1M,         _48K,         _256K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,                           egressPolicer,                arp,                        tunnelStart, */
        _2K,    (36*_1K)     ,    PIPE_MULTIPLE_INDICATION(_32K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _32K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_128K, _24K,         _32K,    PIPE_MULTIPLE_INDICATION(_64K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}
     ,
     /* deviceId,              */
     {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5430_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        96*_1M,         _48K,         _256K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,                           egressPolicer,                arp,                        tunnelStart, */
        _2K,    (36*_1K)     ,    PIPE_MULTIPLE_INDICATION(_32K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _32K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_128K, _24K,         _32K,    PIPE_MULTIPLE_INDICATION(_64K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}
     ,
     /* deviceId,              */
     {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5431_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        96*_1M,         _48K,         _256K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,                           egressPolicer,                arp,                        tunnelStart, */
        _2K,    (36*_1K)     ,    PIPE_MULTIPLE_INDICATION(_32K),SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _32K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_128K, _24K,         _32K,    PIPE_MULTIPLE_INDICATION(_64K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
         GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 74         , &prvUtfDeviceMatrixData1Bobcat3_74ports}


};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin2_73ports =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0xFFFFFFFF, 0xFFFFFFFF, 0x1FF}} /*existingPorts: 0..72  */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin2_64ports =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0xFFFF0FF0, 0xFFFFFFFF, 0x1FF}} /* existingPorts: 4..11, 16..72  */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin2_48ports =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0xFFFFFFFF, 0x0FFF800F}} /* existingPorts: 0..35, 47..59  */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin2_24ports =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0x00ffffff, 0x00008000}} /* existingPorts: 0..23, 47 */
};

static PRV_UTF_DEVICE_MATRIX_DATA1_STC prvUtfDeviceMatrixData1Aldrin2_48special_map_ports =
{
    GT_TRUE,                        /*check_existingPorts*/
    {{0xF0FFFFFF, 0xF0F0F0F0, 0x000000F0}} /* existingPorts: 0..23, 28..31, 36..39, 44..47, 52..55, 60..63, 68..71 */
};

static PRV_UTF_DEVICE_MATRIX_DATA_STC prvUtfDeviceMatrixDataForAldrin2[] =
{
    /* deviceId,              */
    {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5520_CNS), 
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        80 * _1M,         40 * _1K,      _128K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K - 1, 
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _4K,    (18 * _1K),    (_8K),            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _16K, 
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS, _64K, _24K,         _16K,                           (_32K),   GT_TRUE, 
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0, PRV_CPSS_PORT_GE_E, 73, &prvUtfDeviceMatrixData1Aldrin2_73ports
    }, 
    
    /* deviceId,              */
    {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98EX5524_CNS), 
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        80 * _1M,         40 * _1K,      _128K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K - 1, 
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _4K,    (18 * _1K),    (_8K),            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _16K, 
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS, _64K, _24K,         _16K,                           (_32K),   GT_TRUE, 
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0, PRV_CPSS_PORT_GE_E, 49, &prvUtfDeviceMatrixData1Aldrin2_48ports
    }, 
    
    /* deviceId,              */
    {   DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98DX8548_CNS), 
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        48 * _1M,         24 * _1K,      _32K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K - 1, 
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _1K,     _9K,    _2K,            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _8K, 
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS, _16K, _8K,         _16K,                           (_32K),   GT_TRUE, 
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0, PRV_CPSS_PORT_GE_E, 73, &prvUtfDeviceMatrixData1Aldrin2_73ports
    }, 
    
    /* deviceId,              */
    {   DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98DX8524_CNS), 
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        48 * _1M,         24 * _1K,      _32K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K - 1, 
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _1K,     _9K,    _2K,            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _8K, 
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS, _16K, _8K,         _16K,                           (_32K),   GT_TRUE, 
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0, PRV_CPSS_PORT_GE_E, 49, &prvUtfDeviceMatrixData1Aldrin2_48ports
    }, 
    
    /* deviceId,              */
    {   DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98DX8525_CNS), 
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        48 * _1M,         24 * _1K,      _32K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K - 1, 
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _1K,     _9K,    _2K,            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _8K, 
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS, _16K, _8K,         _16K,                           (_32K),   GT_TRUE, 
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0, PRV_CPSS_PORT_GE_E, 25, &prvUtfDeviceMatrixData1Aldrin2_24ports
    }, 
    
    /* deviceId,              */
    {   DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98DX8448_CNS), 
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        48 * _1M,         24 * _1K,      _32K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K - 1, 
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _1K,     _9K,    _2K,            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _8K, 
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS, _16K, _8K,         _16K,                           (_32K),   GT_TRUE, 
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0, PRV_CPSS_PORT_GE_E, 73, &prvUtfDeviceMatrixData1Aldrin2_73ports
    }, 
    
    /* deviceId,              */
    {  DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98DX4310_CNS), 
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        80 * _1M,         40 * _1K,      _128K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K - 1, 
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _4K,    (18 * _1K),    (_8K),            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _16K, 
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS, _64K, _24K,         _16K,                           (_32K),   GT_TRUE, 
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0, PRV_CPSS_PORT_GE_E, 73, &prvUtfDeviceMatrixData1Aldrin2_64ports
    }, 

    /* deviceId,              */
    {   DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98DX8648_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        48*_1M,         24 *_1K,      _32K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _1K    ,
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _1K,     _9K     ,    _2K,            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _4K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_8K, _4K,         _8K,                           (_32K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 73         , &prvUtfDeviceMatrixData1Aldrin2_73ports
    },

    /* deviceId,              */
    {   DEVICE_ID_FROM_DEVICE_TYPE_MAC(CPSS_98DX8410_CNS),
        /*bufferMemory, transmitDescr, fdb,   txQueues,       mcGroups,                      trunks, */
        48*_1M,         24 *_1K,      _32K,        8,       VIDX_NUM_4K_INDICATION_CNS,    _4K-1    ,
        /*mstp,   ingressAcls,    ingressPolicer,               egressPolicer,                arp,                        tunnelStart, */
        _1K,     _9K     ,    _2K,            SHARED_ING_EGR_POLICER_INDICATION_CNS,   ARP_FROM_TS_INDICATION_CNS,  _8K,
        /* tunnelTermination,        lpm, routerNextHop, ipMll,                             cnc,     vlanTranslationSupport, */
        SINGLE_TCAM_INDICATION_CNS ,_16K, _8K,         _16K,                           (_32K) ,   GT_TRUE,
        /* tr101Support, networkPorts, networkPortsType,               stackPorts  ,data1InfoPtr */
        GT_TRUE,         0           , PRV_CPSS_PORT_GE_E             , 49         , &prvUtfDeviceMatrixData1Aldrin2_48special_map_ports
    },

};



#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* __prvUtfDeviceMatrixDatah */

